:root{ /*posso criar variáveis para valores a serem replicadas em todo html*/
    --title-color: #322153;
    --primary-color: #34cb79;
}

* { /*seletor de todos os elemntos*/
    margin: 0;
    padding: 0;
}

html {
    font-family: 'Roboto', sans-serif;

}

header {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

body {
    background: #f0f0f5;
    -webkit-font-smoothing: antialiased; 
}

a {
    text-decoration: none;
}

h1, h2, h3, h4, h5, h6 {
    font-family: Ubuntu, sans-serif; /*não precisa usar aspas simples, desde que a familía de fontes tenha um só nome*/
    color: var(--title-color);

}

#page-home {
    height: 100vh; /*vh: viewport height*/
    background: url('../extras-aula-1/icones/home-background.svg') no-repeat;
    background-position: 35vw bottom; /*vh: viewport width*/
}

#page-home .content { /*cascading*/
    width: 90%;
    max-width: 1100px;

    height: 100%;

    margin: 0 auto;

    display: flex;
    flex-direction: column;

}

#page-home header a {
    display: flex;
    /* color: #322153;*/ /*melhor atribuir essa cor em uma variável em root: */
    color: var(--title-color); 
    font-weight: 700;
    /* text-decoration: none; */
}

#page-home header a span {
    display: flex;
    background-image: url('../extras-aula-1/icones/log-in.svg');
    width: 20px;
    height: 20px;
    margin-right: 16px;
}

.red {
    /* background-color: red; */
}

/* .content {
    width: 90%;
    max-width: 1100px;
    margin: 0 auto;
} */

#page-home main {
    max-width: 560px;

    /* height: 560px; */ /*Não é dinâmico*/

    flex: 1;

    display: flex;
    flex-direction: column;
    justify-content: center;
}

#page-home main h1 {
    font-size: 54px;
    /* color: var(--title-color); */ /*já adicionei essa cor à todos os elemntos h1*/
}

#page-home main p {
    font-size: 24px;
    line-height: 38px; /*espaçamento do texto é diferente do espaçamento dos box*/
    margin-top: 24px;
}

#page-home main a {
    width: 100%;
    max-width: 360px;
    background-color: var(--primary-color);

    height: 72px;
    border-radius: 8px;
    display: flex;
    align-items: center;
    margin-top: 40px;

    transition: 400ms; /*faz a transição no evento de hover do mouse ser mais suave*/

    /* font-weight: bold;  */ /* bold é os 700 de peso na fonte */
    color: white;
}

#page-home main a:hover {
    background-color: #2fb86e;
}

#page-home main a span {
    width: 72px;
    height: 72px;

    background-color: rgba(0, 0, 0, 0.08); /*a, ou alpha, dá a transparência da cor)*/
    
    border-top-left-radius: 8px;
    border-bottom-left-radius: 8px;

    display: flex;
    align-items: center;
    justify-content: center;

    /* background-image: url(/extras-aula-1/icones/search.svg); */
}

#page-home main a span::after { /*criação de um pseudo-element: não existem no html, mas sim no CSS*/
    content: "";
    background-image: url(/extras-aula-1/icones/search.svg);

    width: 20px;
    height: 20px;
}

#page-home main a strong {
    flex: 1;
    text-align: center;
}

@media (max-width: 900px) { /*conjunto de regras dado uma condição*/
    #page-home {
        background-position-x: 70vw ;
    }

    #page-home .content {
        align-items: center;
        text-align: center;
    }

    #page-home header a {
        position: absolute;
        bottom: 48px;
        left: 50%;
        transform: translateX(-50%);
        /*coloquei a caixa do a do header com sua esquerda começando na metade da página
        e depois transladei o seu centro para metade da distância atual no eixo x,
        encontrando seu ponto médio*/
    }
}



/* BOX MODEL 
É uma boa prática trabalhar com os elementos do html em forma
de "caixas", containers, por exemplo, colocando dentro de divs

Box do tipo block ocupam a linha inteira, enquanto que elementos
do tipo inline apenas circunscrevem o texto
*/

/* Para definir um classe, usa-se o "." antes do nome da mesma*/

/* Para definir uma ID, usa-se o "#" antes do nome da mesma
